// Foundation for Apps Form Styles

// Variables

$form-text-size: 16px;
$form-padding: 0.5rem;
$form-label-color: #999;

// Resets

// Make sure textarea takes on height automatically
textarea { height: auto; min-height: 50px; }

// Make select elements 100% width by default
select { width: 100%; }

// Styling

input[type="text"],
input[type="password"],
input[type="date"],
textarea {
  display: block;
  border: 1px solid $secondary-color;
  width: 100%;
  padding: $form-padding;
  margin: 0 0 $form-padding 0;
  -webkit-font-smoothing: antialiased;

  &:focus {
    outline: 0;
    box-shadow: none;
    border-color: darken($secondary-color, 20%);
  }
}

.inline-labels {
  display: flex;
  flex-flow: row nowrap;
  margin-bottom: $form-padding;

  &>* {
    flex: 1 1 auto;
  }

  input {
    margin-bottom: 0;
  }

  label {
    display: block;
    margin: 0;
    background: $secondary-color;
    padding: $form-padding;
    color: darken($secondary-color, 30%);
    flex-shrink: 0;
    flex-grow: 1;
    flex-basis: auto;
    line-height: 1.3;
    font-size: 1rem;
  }
}

form, form>* {

  label {
    display: block;
    color: $form-label-color;
    font-size: 0.8rem;
    margin-bottom: $form-padding / 2;
  }

  @for $i from 2 through 6 { // 3
    $small-count: $i - 1; // 2

    &.small-#{$i}-up { // small-2-up

      display: flex;
      flex-flow: row wrap;

      &>* {
        $current-percentage: percentage(1 / $i); // 33.333333%
        $reduction-amount: $form-padding * ($small-count / $i); // .5rem * (2 / 3)
        flex: 0 0 auto;
        width: calc(#{$current-percentage} - (#{$reduction-amount})); // 33.33333% - .36667777rem

        margin-right: $form-padding / 2;
        margin-left: $form-padding / 2;

        &:nth-child(#{$i}n) { // 3, 6, 9, 12 etc
          margin-right: 0;
        }

        &:nth-child(#{$i}n-#{$small-count}) { // 1, 4, 7, 10
          margin-left: 0;
        }
      }
    }

    @include breakpoint(medium) {

      &.medium-#{$i}-up { // small-2-up

        display: flex;
        flex-flow: row wrap;

        &>* {
          $current-percentage: percentage(1 / $i); // 33.333333%
          $reduction-amount: $form-padding * ($small-count / $i); // .5rem * (2 / 3)
          flex: 0 0 auto;
          width: calc(#{$current-percentage} - (#{$reduction-amount})); // 33.33333% - .36667777rem

          margin-right: $form-padding / 2;
          margin-left: $form-padding / 2;

          &:nth-child(#{$i}n) { // 3, 6, 9, 12 etc
            margin-right: 0;
          }

          &:nth-child(#{$i}n-#{$small-count}) { // 1, 4, 7, 10
            margin-left: 0;
          }
        }
      }
    }

    @include breakpoint(large) {

      &.large-#{$i}-up { // small-2-up

        display: flex;
        flex-flow: row wrap;

        &>* {
          $current-percentage: percentage(1 / $i); // 33.333333%
          $reduction-amount: $form-padding * ($small-count / $i); // .5rem * (2 / 3)
          flex: 0 0 auto;
          width: calc(#{$current-percentage} - (#{$reduction-amount})); // 33.33333% - .36667777rem

          margin-right: $form-padding / 2;
          margin-left: $form-padding / 2;

          &:nth-child(#{$i}n) { // 3, 6, 9, 12 etc
            margin-right: 0;
          }

          &:nth-child(#{$i}n-#{$small-count}) { // 1, 4, 7, 10
            margin-left: 0;
          }
        }
      }
    }
  }
}

%no-appearance {
  -webkit-appearance: none;
     -moz-appearance: none;
}

/*
  Range slider
*/
input[type="range"] {
  $thumb-color: $primary-color;
  $thumb-height: 16px;

  @extend %no-appearance;
  max-width: 300px;
  height: 4px;
  background: #ccc;
  cursor: pointer;

  &:focus {
    outline: 0;
  }

  // Chrome/Safari
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: $thumb-color;
    border-radius: 1000px;;
    width: $thumb-height;
    height: $thumb-height;
  }
  // Firefox
  &::-moz-range-track {
    -moz-appearance: none;
    max-width: 300px;
    height: 4px;
    background: #ccc;
    cursor: pointer;
  }
  &::-moz-range-thumb {
    -moz-appearance: none;
    background: $thumb-color;
    border-radius: 1000px;
    width: $thumb-height;
    height: $thumb-height;
  }
  // Internet Explorer
  &::-ms-track {
    max-width: 300px;
    height: 4px;
    background: #ccc;
    cursor: pointer;
  }
  &::-ms-thumb {
    background: $thumb-color;
    border-radius: 1000px;
    width: $thumb-height;
    height: $thumb-height;
  }

  @at-root {
    output {
      line-height: $thumb-height;
      vertical-align: middle;
      margin-left: 0.5em;
    }
  }
}

/*
  Number inputs
*/
input[type="number"] {
  &::-webkit-inner-spin-button {

  }
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
    background: $primary-color;
  }
}

/*
  Progress and meter
*/
progress, meter {
  $background: #ccc;
  $meter-fill: $primary-color;
  $high-color: $success-color;
  $medium-color: #e7cf00;
  $low-color: $alert-color;

  @extend %no-appearance;
  width: 100%;
  max-width: 200px;
  height: 1em;

  // For Firefox
  background: $background;
  border: 0;

  @at-root {
    progress {
      &::-webkit-progress-bar {
        background: $background;
      }
      &::-webkit-progress-value {
        background: $primary-color;
      }
      &::-moz-progress-bar {
        background: $primary-color;
      }
    }
    meter {
      // Chrome/Safari
      &::-webkit-meter-bar {
        background: $background;
      }
      &::-webkit-meter-optimum-value {
        background: $high-color;
      }
      &::-webkit-meter-suboptimum-value {
        background: $medium-color;
      }
      &::-webkit-meter-even-less-good-value {
        background: $low-color;
      }

      &::-moz-meter-bar {
        background: $primary-color;
      }
      &:-moz-meter-optimum::-moz-meter-bar {
        background: $high-color;
      }
      &:-moz-meter-sub-optimum::-moz-meter-bar {
        background: $medium-color;
      }
      &:-moz-meter-sub-sub-optimum::-moz-meter-bar {
        background: $low-color;
      }
    }
  }
}
